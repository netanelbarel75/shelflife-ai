# ShelfLife.AI Backend Configuration - Enhanced Setup
# Copy this file to .env and customize for your environment

# ==============================================
# Environment & Debug Settings
# ==============================================
DEBUG=true
ENVIRONMENT=development  # development, staging, production
SECRET_KEY=shelflife-1753081376-ee91b6e6b0b1268698e448032b1bf39f
PORT=8000
DEMO_MODE=true

# ==============================================
# Database Configuration
# ==============================================
# Choose your database setup:

# Option 1: SQLite (Recommended for development)
# Simple file-based database, no additional setup required
DATABASE_URL=sqlite:///./shelflife_dev.db

# Option 2: PostgreSQL (Recommended for production)
# Uncomment and configure the lines below to use PostgreSQL
#DATABASE_TYPE=postgresql
#POSTGRES_HOST=localhost
#POSTGRES_PORT=5432
#POSTGRES_USER=shelflife_user
#POSTGRES_PASSWORD=shelflife_pass
#POSTGRES_DB=shelflife_db
#DATABASE_URL=postgresql://shelflife_user:shelflife_pass@localhost:5432/shelflife_db

# ==============================================
# Redis Configuration (Optional)
# ==============================================
REDIS_URL=redis://localhost:6379/0
REDIS_ENABLED=false  # Set to true if you want to use Redis for caching/sessions

# ==============================================
# Authentication & Security
# ==============================================
# JWT Token Settings
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=30

# CORS Settings - Add your frontend URLs
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8081,http://localhost:19006,exp://192.168.1.100:19000

# ==============================================
# File Upload Settings
# ==============================================
MAX_FILE_SIZE=10485760  # 10MB in bytes
UPLOAD_DIR=uploads
ALLOWED_EXTENSIONS=.jpg,.jpeg,.png,.pdf,.txt

# ==============================================
# External Services Configuration
# ==============================================

# Google OAuth Settings (For social login)
# Get these from Google Cloud Console
#GOOGLE_CLIENT_ID=your-google-client-id.googleusercontent.com
#GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8000/api/oauth/google/callback

# Stripe Payment Settings (For marketplace transactions)
# Get these from Stripe Dashboard
#STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key
#STRIPE_SECRET_KEY=sk_test_your_secret_key
#STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# AWS Settings (For file storage and OCR)
# Get these from AWS Console
#AWS_ACCESS_KEY_ID=your-aws-access-key
#AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
S3_BUCKET=shelflife-dev-uploads

# Twilio Settings (For SMS notifications)
# Get these from Twilio Console
#TWILIO_ACCOUNT_SID=your-twilio-account-sid
#TWILIO_AUTH_TOKEN=your-twilio-auth-token
#TWILIO_PHONE_NUMBER=+1234567890

# ==============================================
# Machine Learning & OCR Settings
# ==============================================
# Tesseract OCR Path (for receipt processing)
TESSERACT_PATH=/usr/bin/tesseract

# ML Model Path (for expiry prediction)
MODEL_PATH=ml-model/models/expiry_model.pkl

# ==============================================
# Logging Configuration
# ==============================================
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
#LOG_FILE=logs/shelflife.log  # Uncomment to log to file

# ==============================================
# Development Helpers
# ==============================================
# These settings are only used in development/demo mode

# Demo credentials (created by demo data script)
# Email: demo@shelflife.ai / Password: demo123
# Email: alice@example.com / Password: alice123
# Email: bob@example.com / Password: bob123

# ==============================================
# Production Deployment Settings
# ==============================================
# Uncomment and configure these for production deployment

# Database connection pooling
#DB_POOL_SIZE=10
#DB_MAX_OVERFLOW=20
#DB_POOL_TIMEOUT=30

# Redis for session storage and caching
#REDIS_ENABLED=true
#REDIS_URL=redis://your-redis-host:6379/0

# External file storage (recommended for production)
#USE_S3_STORAGE=true
#S3_BUCKET=your-production-bucket

# Email service for notifications
#EMAIL_BACKEND=smtp
#SMTP_HOST=smtp.gmail.com
#SMTP_PORT=587
#SMTP_USERNAME=your-email@gmail.com
#SMTP_PASSWORD=your-app-password

# Monitoring and observability
#SENTRY_DSN=https://your-sentry-dsn.ingest.sentry.io/project-id

# ==============================================
# Quick Setup Guide
# ==============================================
# 1. Copy this file to .env: cp .env.example .env
# 2. For SQLite (simple): Keep DATABASE_URL as sqlite:///./shelflife_dev.db
# 3. For PostgreSQL: 
#    - Install PostgreSQL
#    - Create database and user
#    - Uncomment and configure PostgreSQL settings above
# 4. Install Python dependencies: pip install -r requirements.txt
# 5. Run configuration test: python test_config.py
# 6. Setup database: python manage_db.py setup
# 7. Create demo data: python manage_db.py demo
# 8. Start server: ./start_shelflife.sh or python main.py

# ==============================================
# Troubleshooting
# ==============================================
# - Database connection issues: Check DATABASE_URL format
# - Permission errors: Check file permissions on uploads/ directory
# - Port already in use: Change PORT to different value (e.g., 8001)
# - Module import errors: Ensure virtual environment is activated
# - OCR not working: Install tesseract-ocr system package
