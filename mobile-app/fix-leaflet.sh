#!/bin/bash

# Fix react-leaflet Issues for ShelfLife.AI Web Maps
echo "üó∫Ô∏è Fixing react-leaflet for web maps..."

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

cd "$(dirname "$0")"

echo -e "${BLUE}üìç Working in: $(pwd)${NC}"

# Step 1: Ensure all map dependencies are installed
echo -e "${YELLOW}üì¶ Step 1: Installing Map Dependencies${NC}"

# Uninstall any problematic versions first
npm uninstall leaflet react-leaflet @types/leaflet 2>/dev/null || true

# Install specific compatible versions
npm install --legacy-peer-deps \
  leaflet@1.9.4 \
  react-leaflet@4.2.1 \
  @types/leaflet@1.9.12

echo -e "${GREEN}‚úÖ Map dependencies installed${NC}"

# Step 2: Install CSS loader support (if needed)
echo -e "${YELLOW}üé® Step 2: Ensuring CSS Support${NC}"

# For Expo web, CSS should be supported by default
# But let's make sure webpack config is proper
npm install --legacy-peer-deps @expo/webpack-config

echo -e "${GREEN}‚úÖ CSS support ensured${NC}"

# Step 3: Clear all caches
echo -e "${YELLOW}üóëÔ∏è Step 3: Clearing Caches${NC}"

rm -rf .metro
rm -rf node_modules/.cache
rm -rf .expo
npm cache clean --force

echo -e "${GREEN}‚úÖ Caches cleared${NC}"

# Step 4: Test leaflet installation
echo -e "${YELLOW}üß™ Step 4: Testing Leaflet Installation${NC}"

# Check if leaflet can be imported
if node -e "require('leaflet'); console.log('‚úÖ leaflet OK')" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ leaflet package works${NC}"
else
    echo -e "${RED}‚ùå leaflet package issue${NC}"
fi

# Check if react-leaflet can be imported
if node -e "require('react-leaflet'); console.log('‚úÖ react-leaflet OK')" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ react-leaflet package works${NC}"
else
    echo -e "${RED}‚ùå react-leaflet package issue${NC}"
fi

# Step 5: Create web test file
echo -e "${YELLOW}üìù Step 5: Creating Web Test File${NC}"

cat > src/utils/testLeaflet.js << 'EOF'
// Test if leaflet can be imported properly
export const testLeafletImport = () => {
  try {
    const leaflet = require('react-leaflet');
    console.log('‚úÖ react-leaflet imported successfully');
    console.log('Available components:', Object.keys(leaflet));
    return true;
  } catch (error) {
    console.error('‚ùå react-leaflet import failed:', error);
    return false;
  }
};

export default testLeafletImport;
EOF

echo -e "${GREEN}‚úÖ Test file created${NC}"

# Step 6: Run Expo install fix
echo -e "${YELLOW}üîß Step 6: Running Expo Fix${NC}"
npx expo install --fix

echo -e "${GREEN}‚úÖ Expo versions fixed${NC}"

echo ""
echo -e "${GREEN}üéâ LEAFLET FIX COMPLETE! üéâ${NC}"
echo "================================"
echo ""
echo -e "${BLUE}What was fixed:${NC}"
echo "‚Ä¢ Installed compatible leaflet versions (1.9.4)"
echo "‚Ä¢ Installed compatible react-leaflet (4.2.1)"
echo "‚Ä¢ Added proper CSS support in Metro config"
echo "‚Ä¢ Enhanced CrossPlatformMap with better error handling"
echo "‚Ä¢ Added leaflet setup utility with icon fixes"
echo "‚Ä¢ Cleared all caches"
echo ""
echo -e "${GREEN}üöÄ Now test your app:${NC}"
echo "1. npm start"
echo "2. Press 'w' for web"
echo "3. Navigate to marketplace"
echo "4. Toggle to map view"
echo ""
echo -e "${BLUE}Expected result:${NC}"
echo "‚Ä¢ Web: Interactive leaflet map with markers"
echo "‚Ä¢ Mobile: Native react-native-maps"
echo "‚Ä¢ Fallback: Beautiful list view if maps fail"
echo ""
echo -e "${GREEN}Maps should work now! üó∫Ô∏è‚ú®${NC}"